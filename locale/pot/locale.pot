# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Tetsuo Koyama
# This file is distributed under the same license as the getfem-binder package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: getfem-binder \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-17 04:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:9
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:9
msgid "Introduction to FEM Analysis with Python"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:11
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:11
msgid "This tutorial aims to show using Python to pre-processing, solve, and post-processing of Finite Element Method analysis. It uses a finite element method library with a Python interface called `GetFEM <http://getfem.org/>`__ for preprocessing and solving. We will load vtk file by using `meshio <https://github.com/nschloe/meshio>`__ and visualize by `matplotlib <https://github.com/matplotlib/matplotlib>`__ in pre-processing and post-processing. This tutorial was used in the `PyConJP 2019 talk <https://pycon.jp/2019/schedule/?sessionId=120>`__. You can watch the talk on YouTube below. This tutorial is based on the following `official GetFEM page tutorial <http://getfem.org/tutorial/thermo_coupling.html>`__."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:66
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:66
msgid "Installation"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:68
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:68
msgid "GetFEM including its python interface can be installed from a terminal by executing aptitude update and aptitude install python-getfem++."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:91
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:91
msgid "The additional packages in `requirements.txt <https://github.com/getfem-doc/getfem-binder/blob/master/requirements.txt>`__ are required for this tutorial. You do not need to build these environments because they are already configured in the `Dockerfile <https://github.com/getfem-doc/getfem-binder/blob/master/Dockerfile>`__."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:103
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:103
msgid "The problem setting"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:105
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:105
msgid "The problem refers to `\"Poisson's Equation on Unit Disk\" <https://mathworks.com/help/pde/ug/solve-poissons-equation-on-a-unit-disk.html>`__ published by Math Works's homepage."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:107
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:107
msgid "âˆ’\\Delta u=1 \\ {\\rm on}\\  \\Omega, u=0 \\ {\\rm on}\\  \\delta \\Omega"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:109
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:109
msgid "|pdedemo1\\_01|"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:123
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:123
msgid "How to use GetEM"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:125
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:125
msgid "We take the following steps when using GetFEM to solve finite element problems. See `this page <http://getfem.org/tutorial/basic_usage.html>`__ for more information on using GetFEM."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:127
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:127
msgid "define a `MesherObject <http://getfem.org/python/cmdref_MesherObject.html>`__"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:128
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:128
msgid "define a `Mesh <http://getfem.org/python/cmdref_Mesh.html>`__"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:129
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:129
msgid "define a `MeshFem <http://getfem.org/python/cmdref_MeshFem.html>`__"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:130
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:130
msgid "define a `MeshIm <http://getfem.org/python/cmdref_MeshIm.html>`__"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:131
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:131
msgid "define a `Model <http://getfem.org/python/cmdref_Model.html>`__ and set it up"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:132
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:132
msgid "solve Model object"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:133
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:133
msgid "get value from Model object"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:145
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:145
msgid "Initialization"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:147
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:147
msgid "GetFEM can be imported following (numpy has also to be imported)."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:170
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:170
msgid "Mesh generation"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:181
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:181
msgid "We use GetFEM's `MesherObject <http://getfem.org/python/cmdref_MesherObject.html#>`__ to create a mesh from the geometric information to be analyzed. This object represents a geometric object to be meshed by the experimental meshing procedure of GetFEM. We can represents a ball of corresponding center and radius by using \"ball\"."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:205
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:205
msgid "We can make mesh object ``mesh`` by calling the experimental mesher of GetFEM on the geometry represented by ``mo``."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:228
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:228
msgid "Boundary selection"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:239
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:239
msgid "To define a boundary condition, we set a boundary number on the outer circumference of the circle."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:263
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:263
msgid "Mesh draw"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:274
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:274
msgid "We visualize the created mesh to check its quality. We make Slice of ject to create a mesh slice.We can output mesh objects, but matplotlib can only output triangles. Therefore, we convert mesh to triangles on the slice object."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:295
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:295
msgid "We can export a slice to VTK file by using export\\_to\\_vtk method."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:316
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:316
msgid "We can rendere VTK files using Paraview or mayavi2. In order to display in the jupyter notebook this time, we read in meshio and draw in matplotlib."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:388
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:388
msgid "Definition of finite element methods and integration method"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:390
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:390
msgid "We define the finite element and integration methods to use. We define a MeshFem that defines the degree of freedom of the mesh in the first order."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:411
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:411
msgid "Next we set the finite element used. ``classical_finite_element`` means a continuous Lagrange element and remember that elements\\_degree has been set to 2 which means that we will use quadratic (isoparametric) elements."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:433
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:433
msgid "The last thing to define is an integration method mim. There is no default integration method in GetFEM so this is mandatory to define an integration method. Of course, the order of the integration method have to be chosen sufficient to make a convenient integration of the selected finite element method. Here, the square of ``elements_degree`` is sufficient."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:455
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:455
msgid "Model definition"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:457
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:457
msgid "The model object in GetFEM gather the variables of the models (the unknowns), the data and what is called the model bricks. The model bricks are some parts of the model (linear or nonlinear terms) applied on a single variable or linking several variables. They are used to make the assembly of the (tangent) linear system (see The model object for more details)."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:459
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:459
msgid "[K] \\left\\{ u \\right\\} = \\left\\{ F \\right\\}"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:482
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:482
msgid "Poisson's equation"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:484
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:484
msgid "To define poisson's equation, we have to deifine Laplacian term and RHS source term. We can add Laplacian term (which called brick in GetFEM) by using ``add_Laplacian_brick``."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:525
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:525
msgid "If you want to define constants in GetFEM, we use ``add_fem_data`` method."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:547
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:547
msgid "We can set constant values with the ``set_variable`` method."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:568
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:568
msgid "We define the term RHS using the constant F defined. We use the ``add_source_term_brick`` method for the definition."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:609
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:609
msgid "Finally, we set the Dirichlet condition at the boundary."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:651
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:651
msgid "Model solve"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:653
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:653
msgid "Once the model is correctly defined, we can simply solve it by:"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:695
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:695
msgid "Export/visualization of the solution"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:697
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:697
msgid "The finite element problem is now solved. We can get the solution :math:`u` by using ``variable`` method."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:718
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:718
msgid "We can output the computed u with the mesh of the Slice object."
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:791
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:791
msgid "Exact solution"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:793
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:793
msgid "The exact solution to this problem is given by the following equation:"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:795
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:795
msgid "u(x, y) = \\dfrac{1-x^2-y^2}{4}"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:816
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:816
msgid "We can calculate the error for the L2 and H1 norms by using ``compute``:"
msgstr ""

#: .doctrees/nbsphinx/demo_unit_disk.ipynb:861
#: .doctrees/nbsphinx/locale/pot/.doctrees/nbsphinx/demo_unit_disk.ipynb:861
msgid "As you can see, the size of the error is within the acceptable range."
msgstr ""
